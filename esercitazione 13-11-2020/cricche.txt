%Esercizio 2.  Dato un grafo indiretto G, diciamo che G ha una cricca di dimensione
%k se cè un insieme di k nodi tale che ogni coppia di nodi al suo interno è connessa 
%da un arco.Scrivere un programma logico disgiuntivo che calcoli tutte le cricche massimali
%(cioè insiemi tali per cui non cè nessun nodo che possa essere aggiunto senza perdere la proprietà di essere una cricca) 
%di un dato grafo, rappresentato tramite la relazione binaria arc(Nodo1, Nodo2).Ad esempio, il grafo riportato a destra, avente come archi:arc(1,2). 
%arc(2,3). arc(3,4). arc(1,5). arc(3,5). arc(2,5). arc(1,3). ha 2 cricche massimali formate dai nodi: {1,2,3,5} e {3,4}. 

arc(1,2). arc(2,3). arc(3,4). arc(1,5). arc(3,5). arc(2,5). arc(1,3).

inCricca(X) | outCricca(X) :- nodo(X).

arc(X,Y) :- arc(Y,X).
nodo(X) :- arc(_,X).
:- inCricca(X), notConnexted(X).
notConnexted(X):- nodo(X), inCricca(Y), not arc(X,Y), X!=Y.

:-outCricca(X), not notConnexted(X).

