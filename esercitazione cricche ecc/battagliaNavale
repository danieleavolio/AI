% == == == == == == == == == == == == == == == == == == == == == == == == == == == 
% BATTAGLIA NAVALE - semplificato 
% Abbiamo cinque navi, ciascuna identificata con un numero.
ship(1). ship(2). ship(3). ship(4). ship(5).

% Queste navi sono su un campo di battaglia che puo essere visto 
% come una matrice con righe e colonne. Ciascuna nave e "composta" da
% tre "pezzi", e pertanto occupa 3 posizioni sul campo di battaglia; si 
% sa che sono navi "lunghe", quindi non possono essere ad "L", ma solo
% in orrizzontale o in verticale. Si devono individuare le posizioni 
% di tutte le navi, sapendo che in input si hanno fatti del tipo
% 
%rowsum(R,Su)
% 
%e
% 
%colsum(R,Su)
%
% che indicano quante celle occupate ci sono sul campo di battaglia per 
% ciascuna riga e colonna, rispettivamente (una sorta di tomografia
% bidimensionale).


%input

row(1..8).
col(1..8).

%rowsum(1,3). % riga 1, 3 posti occ
%colsum(3,3). % colonna 3, 3 posti occ


cella(X,Y):- row(X), col(Y).

posNave(X,Y,N) | nonPosNave(X,Y,N):- cella(X,Y), ship(N).

%:- rowsum(X,Z), #count{Y: posNave(X,Y,_)}!= Z.
%:- colsum(Y,Z), #count{X: posNave(X,Y,_)}!= Z.


:-#count{N:posNave(X,Y,N)}!=1, cella(X,Y).





